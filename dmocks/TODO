Maybe:
    - Partial mocks. If there's no expectation, fall back on the base class. This will work decently with the passthrough stuff, except -- CONSTRUCTOR NOT CALLED
    - Mock free functions?
        template MockFunc (alias func) {
            ReturnType!(func) mockOfFunc(ParameterTypeTuple!(func)) {}
            void MockFunc () { redirect(&func, &mockOfFunc); }
        }
    - Thread safety
    - Throw an exception if there's no return value, delegate, or exception set up during replay. Ideally, have that happen earlier.
    - Don't mock opEquals, toHash if they're the same as the ones in Object. Maybe not anything that's the same as in Object.

When I figure out something clever:
    - Mock templated methods
    - Expect(obj.voidmethod);


What do I need for a 1.0 release?
    - Everything in 'soon'.


